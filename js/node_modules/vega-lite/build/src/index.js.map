{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,GAAG,MAAM,iBAAiB,CAAC;AAClC,OAAO,KAAK,SAAS,MAAM,aAAa,CAAC;AACzC,OAAO,KAAK,IAAI,MAAM,QAAQ,CAAC;AAC/B,OAAO,KAAK,GAAG,MAAM,OAAO,CAAC;AAC7B,OAAO,KAAK,OAAO,MAAM,WAAW,CAAC;AACrC,OAAO,KAAK,aAAa,MAAM,iBAAiB,CAAC;AACjD,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AACnC,OAAO,KAAK,IAAI,MAAM,QAAQ,CAAC;AAC/B,OAAO,KAAK,QAAQ,MAAM,YAAY,CAAC;AACvC,OAAO,KAAK,QAAQ,MAAM,YAAY,CAAC;AACvC,OAAO,KAAK,QAAQ,MAAM,YAAY,CAAC;AACvC,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AACnC,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AACnC,OAAO,KAAK,IAAI,MAAM,QAAQ,CAAC;AAC/B,OAAO,KAAK,KAAK,MAAM,SAAS,CAAC;AACjC,OAAO,KAAK,IAAI,MAAM,QAAQ,CAAC;AAC/B,OAAO,KAAK,IAAI,MAAM,QAAQ,CAAC;AAC/B,OAAO,KAAK,KAAK,MAAM,SAAS,CAAC;AACjC,OAAO,KAAK,QAAQ,MAAM,YAAY,CAAC;AACvC,OAAO,KAAK,SAAS,MAAM,aAAa,CAAC;AACzC,OAAO,KAAK,IAAI,MAAM,QAAQ,CAAC;AAC/B,OAAO,KAAK,IAAI,MAAM,QAAQ,CAAC;AAC/B,OAAO,KAAK,QAAQ,MAAM,YAAY,CAAC;AACvC,OAAO,EAAC,OAAO,EAAC,MAAM,mBAAmB,CAAC;AAG1C,OAAO,EAAC,iBAAiB,EAAC,MAAM,oBAAoB,CAAC;AACrD,OAAO,EACL,SAAS,EACT,IAAI,EACJ,GAAG,EACH,OAAO,EACP,aAAa,EACb,MAAM,EACN,IAAI,EACJ,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,MAAM,EACN,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,SAAS,EACT,IAAI,EACJ,IAAI,EACJ,QAAQ,EACR,OAAO,EACR,CAAC;AAEF,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC","sourcesContent":["import pkg from '../package.json';\nimport * as aggregate from './aggregate';\nimport * as axis from './axis';\nimport * as bin from './bin';\nimport * as channel from './channel';\nimport * as compositeMark from './compositemark';\nimport * as config from './config';\nimport * as data from './data';\nimport * as datetime from './datetime';\nimport * as encoding from './encoding';\nimport * as fieldDef from './fielddef';\nimport * as header from './header';\nimport * as legend from './legend';\nimport * as mark from './mark';\nimport * as scale from './scale';\nimport * as sort from './sort';\nimport * as spec from './spec';\nimport * as stack from './stack';\nimport * as timeUnit from './timeunit';\nimport * as transform from './transform';\nimport * as type from './type';\nimport * as util from './util';\nimport * as validate from './validate';\nexport {compile} from './compile/compile';\nexport {Config} from './config';\nexport {TopLevelSpec} from './spec';\nexport {extractTransforms} from './transformextract';\nexport {\n  aggregate,\n  axis,\n  bin,\n  channel,\n  compositeMark,\n  config,\n  data,\n  datetime,\n  encoding,\n  fieldDef,\n  header,\n  legend,\n  mark,\n  scale,\n  sort,\n  spec,\n  stack,\n  timeUnit,\n  transform,\n  type,\n  util,\n  validate,\n  version\n};\n\nconst version = pkg.version;\n"]}