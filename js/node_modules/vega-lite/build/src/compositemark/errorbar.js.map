{"version":3,"file":"errorbar.js","sourceRoot":"","sources":["../../../src/compositemark/errorbar.ts"],"names":[],"mappings":"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","sourcesContent":["import {AggregateOp} from 'vega';\nimport {Channel} from '../channel';\nimport {Config} from '../config';\nimport {Data} from '../data';\nimport {Encoding, extractTransformsFromEncoding} from '../encoding';\nimport {\n  Field,\n  FieldDefWithoutScale,\n  isContinuous,\n  isFieldDef,\n  PositionFieldDef,\n  SecondaryFieldDef,\n  title\n} from '../fielddef';\nimport * as log from '../log';\nimport {isMarkDef, MarkDef} from '../mark';\nimport {GenericUnitSpec, NormalizedLayerSpec} from '../spec';\nimport {TitleParams} from '../title';\nimport {AggregatedFieldDef, CalculateTransform, Transform} from '../transform';\nimport {Flag, keys, titlecase} from '../util';\nimport {Orient} from '../vega.schema';\nimport {\n  compositeMarkContinuousAxis,\n  compositeMarkOrient,\n  CompositeMarkTooltipSummary,\n  filterUnsupportedChannels,\n  GenericCompositeMarkDef,\n  getCompositeMarkTooltip,\n  makeCompositeAggregatePartFactory,\n  PartsMixins\n} from './common';\nimport {ErrorBand, ErrorBandDef} from './errorband';\n\nexport const ERRORBAR: 'errorbar' = 'errorbar';\nexport type ErrorBar = typeof ERRORBAR;\n\nexport type ErrorBarExtent = 'ci' | 'iqr' | 'stderr' | 'stdev';\nexport type ErrorBarCenter = 'mean' | 'median';\n\nexport type ErrorBarPart = 'ticks' | 'rule';\n\nexport type ErrorInputType = 'raw' | 'aggregated-upper-lower' | 'aggregated-error';\n\nconst ERRORBAR_PART_INDEX: Flag<ErrorBarPart> = {\n  ticks: 1,\n  rule: 1\n};\n\nexport const ERRORBAR_PARTS = keys(ERRORBAR_PART_INDEX);\n\nexport type ErrorBarPartsMixins = PartsMixins<ErrorBarPart>;\n\nexport interface ErrorBarConfig extends ErrorBarPartsMixins {\n  /**\n   * The center of the errorbar. Available options include:\n   * - `\"mean\"`: the mean of the data points.\n   * - `\"median\"`: the median of the data points.\n   *\n   * __Default value:__ `\"mean\"`.\n   * @hide\n   */\n\n  // center is not needed right now but will be added back to the schema if future features require it.\n  center?: ErrorBarCenter;\n\n  /**\n   * The extent of the rule. Available options include:\n   * - `\"ci\"`: Extend the rule to the confidence interval of the mean.\n   * - `\"stderr\"`: The size of rule are set to the value of standard error, extending from the mean.\n   * - `\"stdev\"`: The size of rule are set to the value of standard deviation, extending from the mean.\n   * - `\"iqr\"`: Extend the rule to the q1 and q3.\n   *\n   * __Default value:__ `\"stderr\"`.\n   */\n  extent?: ErrorBarExtent;\n}\n\nexport type ErrorBarDef = GenericCompositeMarkDef<ErrorBar> &\n  ErrorBarConfig & {\n    /**\n     * Orientation of the error bar.  This is normally automatically determined, but can be specified when the orientation is ambiguous and cannot be automatically determined.\n     */\n    orient?: Orient;\n  };\n\nexport interface ErrorBarConfigMixins {\n  /**\n   * ErrorBar Config\n   */\n  errorbar?: ErrorBarConfig;\n}\n\nexport function normalizeErrorBar(\n  spec: GenericUnitSpec<Encoding<string>, ErrorBar | ErrorBarDef>,\n  config: Config\n): NormalizedLayerSpec {\n  const {\n    transform,\n    continuousAxisChannelDef,\n    continuousAxis,\n    encodingWithoutContinuousAxis,\n    ticksOrient,\n    markDef,\n    outerSpec,\n    tooltipEncoding\n  } = errorBarParams(spec, ERRORBAR, config);\n\n  const makeErrorBarPart = makeCompositeAggregatePartFactory<ErrorBarPartsMixins>(\n    markDef,\n    continuousAxis,\n    continuousAxisChannelDef,\n    encodingWithoutContinuousAxis,\n    config.errorbar\n  );\n\n  const tick: MarkDef = {type: 'tick', orient: ticksOrient};\n\n  return {\n    ...outerSpec,\n    transform,\n    layer: [\n      ...makeErrorBarPart({\n        partName: 'ticks',\n        mark: tick,\n        positionPrefix: 'lower',\n        extraEncoding: tooltipEncoding\n      }),\n      ...makeErrorBarPart({\n        partName: 'ticks',\n        mark: tick,\n        positionPrefix: 'upper',\n        extraEncoding: tooltipEncoding\n      }),\n      ...makeErrorBarPart({\n        partName: 'rule',\n        mark: 'rule',\n        positionPrefix: 'lower',\n        endPositionPrefix: 'upper',\n        extraEncoding: tooltipEncoding\n      })\n    ]\n  };\n}\n\nfunction errorBarOrientAndInputType(\n  spec: GenericUnitSpec<Encoding<Field>, ErrorBar | ErrorBand | ErrorBarDef | ErrorBandDef>,\n  compositeMark: ErrorBar | ErrorBand\n): {\n  orient: Orient;\n  inputType: ErrorInputType;\n} {\n  const {encoding} = spec;\n\n  if (errorBarIsInputTypeRaw(encoding)) {\n    return {\n      orient: compositeMarkOrient(spec, compositeMark),\n      inputType: 'raw'\n    };\n  }\n\n  const isTypeAggregatedUpperLower: boolean = errorBarIsInputTypeAggregatedUpperLower(encoding);\n  const isTypeAggregatedError: boolean = errorBarIsInputTypeAggregatedError(encoding);\n  const x = encoding.x;\n  const y = encoding.y;\n\n  if (isTypeAggregatedUpperLower) {\n    // type is aggregated-upper-lower\n\n    if (isTypeAggregatedError) {\n      throw new Error(compositeMark + ' cannot be both type aggregated-upper-lower and aggregated-error');\n    }\n\n    const x2 = encoding.x2;\n    const y2 = encoding.y2;\n\n    if (isFieldDef(x2) && isFieldDef(y2)) {\n      // having both x, x2 and y, y2\n      throw new Error(compositeMark + ' cannot have both x2 and y2');\n    } else if (isFieldDef(x2)) {\n      if (isFieldDef(x) && isContinuous(x)) {\n        // having x, x2 quantitative and field y, y2 are not specified\n        return {orient: 'horizontal', inputType: 'aggregated-upper-lower'};\n      } else {\n        // having x, x2 that are not both quantitative\n        throw new Error('Both x and x2 have to be quantitative in ' + compositeMark);\n      }\n    } else if (isFieldDef(y2)) {\n      // y2 is a FieldDef\n      if (isFieldDef(y) && isContinuous(y)) {\n        // having y, y2 quantitative and field x, x2 are not specified\n        return {orient: 'vertical', inputType: 'aggregated-upper-lower'};\n      } else {\n        // having y, y2 that are not both quantitative\n        throw new Error('Both y and y2 have to be quantitative in ' + compositeMark);\n      }\n    }\n    throw new Error('No ranged axis');\n  } else {\n    // type is aggregated-error\n\n    const xError = encoding.xError;\n    const xError2 = encoding.xError2;\n    const yError = encoding.yError;\n    const yError2 = encoding.yError2;\n\n    if (isFieldDef(xError2) && !isFieldDef(xError)) {\n      // having xError2 without xError\n      throw new Error(compositeMark + ' cannot have xError2 without xError');\n    }\n\n    if (isFieldDef(yError2) && !isFieldDef(yError)) {\n      // having yError2 without yError\n      throw new Error(compositeMark + ' cannot have yError2 without yError');\n    }\n\n    if (isFieldDef(xError) && isFieldDef(yError)) {\n      // having both xError and yError\n      throw new Error(compositeMark + ' cannot have both xError and yError with both are quantiative');\n    } else if (isFieldDef(xError)) {\n      if (isFieldDef(x) && isContinuous(x)) {\n        // having x and xError that are all quantitative\n        return {orient: 'horizontal', inputType: 'aggregated-error'};\n      } else {\n        // having x, xError, and xError2 that are not all quantitative\n        throw new Error('All x, xError, and xError2 (if exist) have to be quantitative');\n      }\n    } else if (isFieldDef(yError)) {\n      if (isFieldDef(y) && isContinuous(y)) {\n        // having y and yError that are all quantitative\n        return {orient: 'vertical', inputType: 'aggregated-error'};\n      } else {\n        // having y, yError, and yError2 that are not all quantitative\n        throw new Error('All y, yError, and yError2 (if exist) have to be quantitative');\n      }\n    }\n    throw new Error('No ranged axis');\n  }\n}\n\nfunction errorBarIsInputTypeRaw(encoding: Encoding<Field>): boolean {\n  return (\n    (isFieldDef(encoding.x) || isFieldDef(encoding.y)) &&\n    !isFieldDef(encoding.x2) &&\n    !isFieldDef(encoding.y2) &&\n    !isFieldDef(encoding.xError) &&\n    !isFieldDef(encoding.xError2) &&\n    !isFieldDef(encoding.yError) &&\n    !isFieldDef(encoding.yError2)\n  );\n}\n\nfunction errorBarIsInputTypeAggregatedUpperLower(encoding: Encoding<Field>): boolean {\n  return isFieldDef(encoding.x2) || isFieldDef(encoding.y2);\n}\n\nfunction errorBarIsInputTypeAggregatedError(encoding: Encoding<Field>): boolean {\n  return (\n    isFieldDef(encoding.xError) ||\n    isFieldDef(encoding.xError2) ||\n    isFieldDef(encoding.yError) ||\n    isFieldDef(encoding.yError2)\n  );\n}\n\nexport const errorBarSupportedChannels: Channel[] = [\n  'x',\n  'y',\n  'x2',\n  'y2',\n  'xError',\n  'yError',\n  'xError2',\n  'yError2',\n  'color',\n  'detail',\n  'opacity'\n];\n\nexport function errorBarParams<\n  M extends ErrorBar | ErrorBand,\n  MD extends GenericCompositeMarkDef<M> & (ErrorBarDef | ErrorBandDef)\n>(\n  spec: GenericUnitSpec<Encoding<string>, M | MD>,\n  compositeMark: M,\n  config: Config\n): {\n  transform: Transform[];\n  groupby: string[];\n  continuousAxisChannelDef: PositionFieldDef<string>;\n  continuousAxis: 'x' | 'y';\n  encodingWithoutContinuousAxis: Encoding<string>;\n  ticksOrient: Orient;\n  markDef: MD;\n  outerSpec: {\n    data?: Data;\n    title?: string | TitleParams;\n    name?: string;\n    description?: string;\n    transform?: Transform[];\n    width?: number;\n    height?: number;\n  };\n  tooltipEncoding: Encoding<string>;\n} {\n  spec = filterUnsupportedChannels<M, MD>(spec, errorBarSupportedChannels, compositeMark);\n\n  // TODO: use selection\n  const {mark, encoding, selection, projection: _p, ...outerSpec} = spec;\n  const markDef: MD = isMarkDef(mark) ? mark : ({type: mark} as MD);\n\n  // TODO(https://github.com/vega/vega-lite/issues/3702): add selection support\n  if (selection) {\n    log.warn(log.message.selectionNotSupported(compositeMark));\n  }\n\n  const {orient, inputType} = errorBarOrientAndInputType(spec, compositeMark);\n  const {\n    continuousAxisChannelDef,\n    continuousAxisChannelDef2,\n    continuousAxisChannelDefError,\n    continuousAxisChannelDefError2,\n    continuousAxis\n  } = compositeMarkContinuousAxis(spec, orient, compositeMark);\n\n  const {\n    errorBarSpecificAggregate,\n    postAggregateCalculates,\n    tooltipSummary,\n    tooltipTitleWithFieldName\n  } = errorBarAggregationAndCalculation(\n    markDef,\n    continuousAxisChannelDef,\n    continuousAxisChannelDef2,\n    continuousAxisChannelDefError,\n    continuousAxisChannelDefError2,\n    inputType,\n    compositeMark,\n    config\n  );\n\n  const {\n    [continuousAxis]: oldContinuousAxisChannelDef,\n    [continuousAxis === 'x' ? 'x2' : 'y2']: oldContinuousAxisChannelDef2,\n    [continuousAxis === 'x' ? 'xError' : 'yError']: oldContinuousAxisChannelDefError,\n    [continuousAxis === 'x' ? 'xError2' : 'yError2']: oldContinuousAxisChannelDefError2,\n    ...oldEncodingWithoutContinuousAxis\n  } = encoding;\n\n  const {\n    bins,\n    timeUnits,\n    aggregate: oldAggregate,\n    groupby: oldGroupBy,\n    encoding: encodingWithoutContinuousAxis\n  } = extractTransformsFromEncoding(oldEncodingWithoutContinuousAxis, config);\n\n  const aggregate: AggregatedFieldDef[] = [...oldAggregate, ...errorBarSpecificAggregate];\n  const groupby: string[] = inputType !== 'raw' ? [] : oldGroupBy;\n\n  const tooltipEncoding: Encoding<string> = getCompositeMarkTooltip(\n    tooltipSummary,\n    continuousAxisChannelDef,\n    encodingWithoutContinuousAxis,\n    tooltipTitleWithFieldName\n  );\n\n  return {\n    transform: [\n      ...(outerSpec.transform || []),\n      ...bins,\n      ...timeUnits,\n      ...(!aggregate.length ? [] : [{aggregate, groupby}]),\n      ...postAggregateCalculates\n    ],\n    groupby,\n    continuousAxisChannelDef,\n    continuousAxis,\n    encodingWithoutContinuousAxis,\n    ticksOrient: orient === 'vertical' ? 'horizontal' : 'vertical',\n    markDef,\n    outerSpec,\n    tooltipEncoding\n  };\n}\n\nfunction errorBarAggregationAndCalculation<\n  M extends ErrorBar | ErrorBand,\n  MD extends GenericCompositeMarkDef<M> & (ErrorBarDef | ErrorBandDef)\n>(\n  markDef: MD,\n  continuousAxisChannelDef: PositionFieldDef<string>,\n  continuousAxisChannelDef2: SecondaryFieldDef<string>,\n  continuousAxisChannelDefError: FieldDefWithoutScale<string>,\n  continuousAxisChannelDefError2: SecondaryFieldDef<string>,\n  inputType: ErrorInputType,\n  compositeMark: M,\n  config: Config\n): {\n  postAggregateCalculates: CalculateTransform[];\n  errorBarSpecificAggregate: AggregatedFieldDef[];\n  tooltipSummary: CompositeMarkTooltipSummary[];\n  tooltipTitleWithFieldName: boolean;\n} {\n  let errorBarSpecificAggregate: AggregatedFieldDef[] = [];\n  let postAggregateCalculates: CalculateTransform[] = [];\n  const continuousFieldName: string = continuousAxisChannelDef.field;\n\n  let tooltipSummary: CompositeMarkTooltipSummary[];\n  let tooltipTitleWithFieldName = false;\n\n  if (inputType === 'raw') {\n    const center: ErrorBarCenter = markDef.center\n      ? markDef.center\n      : markDef.extent\n      ? markDef.extent === 'iqr'\n        ? 'median'\n        : 'mean'\n      : config.errorbar.center;\n    const extent: ErrorBarExtent = markDef.extent ? markDef.extent : center === 'mean' ? 'stderr' : 'iqr';\n\n    if ((center === 'median') !== (extent === 'iqr')) {\n      log.warn(log.message.errorBarCenterIsUsedWithWrongExtent(center, extent, compositeMark));\n    }\n\n    if (extent === 'stderr' || extent === 'stdev') {\n      errorBarSpecificAggregate = [\n        {op: extent, field: continuousFieldName, as: 'extent_' + continuousFieldName},\n        {op: center, field: continuousFieldName, as: 'center_' + continuousFieldName}\n      ];\n\n      postAggregateCalculates = [\n        {\n          calculate: `datum.center_${continuousFieldName} + datum.extent_${continuousFieldName}`,\n          as: 'upper_' + continuousFieldName\n        },\n        {\n          calculate: `datum.center_${continuousFieldName} - datum.extent_${continuousFieldName}`,\n          as: 'lower_' + continuousFieldName\n        }\n      ];\n\n      tooltipSummary = [\n        {fieldPrefix: 'center_', titlePrefix: titlecase(center)},\n        {fieldPrefix: 'upper_', titlePrefix: getTitlePrefix(center, extent, '+')},\n        {fieldPrefix: 'lower_', titlePrefix: getTitlePrefix(center, extent, '-')}\n      ];\n      tooltipTitleWithFieldName = true;\n    } else {\n      if (markDef.center && markDef.extent) {\n        log.warn(log.message.errorBarCenterIsNotNeeded(markDef.extent, compositeMark));\n      }\n\n      let centerOp: AggregateOp;\n      let lowerExtentOp: AggregateOp;\n      let upperExtentOp: AggregateOp;\n      if (extent === 'ci') {\n        centerOp = 'mean';\n        lowerExtentOp = 'ci0';\n        upperExtentOp = 'ci1';\n      } else {\n        centerOp = 'median';\n        lowerExtentOp = 'q1';\n        upperExtentOp = 'q3';\n      }\n\n      errorBarSpecificAggregate = [\n        {op: lowerExtentOp, field: continuousFieldName, as: 'lower_' + continuousFieldName},\n        {op: upperExtentOp, field: continuousFieldName, as: 'upper_' + continuousFieldName},\n        {op: centerOp, field: continuousFieldName, as: 'center_' + continuousFieldName}\n      ];\n\n      tooltipSummary = [\n        {\n          fieldPrefix: 'upper_',\n          titlePrefix: title({field: continuousFieldName, aggregate: upperExtentOp, type: 'quantitative'}, config, {\n            allowDisabling: false\n          })\n        },\n        {\n          fieldPrefix: 'lower_',\n          titlePrefix: title({field: continuousFieldName, aggregate: lowerExtentOp, type: 'quantitative'}, config, {\n            allowDisabling: false\n          })\n        },\n        {\n          fieldPrefix: 'center_',\n          titlePrefix: title({field: continuousFieldName, aggregate: centerOp, type: 'quantitative'}, config, {\n            allowDisabling: false\n          })\n        }\n      ];\n    }\n  } else {\n    if (markDef.center || markDef.extent) {\n      log.warn(log.message.errorBarCenterAndExtentAreNotNeeded(markDef.center, markDef.extent));\n    }\n\n    if (inputType === 'aggregated-upper-lower') {\n      tooltipSummary = [];\n      postAggregateCalculates = [\n        {calculate: `datum.${continuousAxisChannelDef2.field}`, as: `upper_` + continuousFieldName},\n        {calculate: `datum.${continuousFieldName}`, as: `lower_` + continuousFieldName}\n      ];\n    } else if (inputType === 'aggregated-error') {\n      tooltipSummary = [{fieldPrefix: '', titlePrefix: continuousFieldName}];\n      postAggregateCalculates = [\n        {\n          calculate: `datum.${continuousFieldName} + datum.${continuousAxisChannelDefError.field}`,\n          as: `upper_` + continuousFieldName\n        }\n      ];\n\n      if (continuousAxisChannelDefError2) {\n        postAggregateCalculates.push({\n          calculate: `datum.${continuousFieldName} + datum.${continuousAxisChannelDefError2.field}`,\n          as: `lower_` + continuousFieldName\n        });\n      } else {\n        postAggregateCalculates.push({\n          calculate: `datum.${continuousFieldName} - datum.${continuousAxisChannelDefError.field}`,\n          as: `lower_` + continuousFieldName\n        });\n      }\n    }\n\n    for (const postAggregateCalculate of postAggregateCalculates) {\n      tooltipSummary.push({\n        fieldPrefix: postAggregateCalculate.as.substring(0, 6),\n        titlePrefix: postAggregateCalculate.calculate.replace(new RegExp('datum.', 'g'), '')\n      });\n    }\n  }\n  return {postAggregateCalculates, errorBarSpecificAggregate, tooltipSummary, tooltipTitleWithFieldName};\n}\n\nfunction getTitlePrefix(center: ErrorBarCenter, extent: ErrorBarExtent, operation: '+' | '-'): string {\n  return titlecase(center) + ' ' + operation + ' ' + extent;\n}\n"]}