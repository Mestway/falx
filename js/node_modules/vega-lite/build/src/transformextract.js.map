{"version":3,"file":"transformextract.js","sourceRoot":"","sources":["../../src/transformextract.ts"],"names":[],"mappings":"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","sourcesContent":["import {Config} from './config';\nimport {extractTransformsFromEncoding} from './encoding';\nimport * as log from './log';\nimport {\n  GenericHConcatSpec,\n  GenericVConcatSpec,\n  isFacetSpec,\n  isHConcatSpec,\n  isLayerSpec,\n  isRepeatSpec,\n  isUnitSpec,\n  isVConcatSpec,\n  NormalizedConcatSpec,\n  NormalizedFacetSpec,\n  NormalizedLayerSpec,\n  NormalizedRepeatSpec,\n  NormalizedSpec,\n  NormalizedUnitSpec\n} from './spec';\n\n/**\n * Modifies spec extracting transformations from encoding and moving them to the transforms array\n */\nexport function extractTransforms(spec: NormalizedSpec, config: Config): NormalizedSpec {\n  if (isFacetSpec(spec) || isRepeatSpec(spec)) {\n    return extractTransformsSingle(spec, config);\n  }\n  if (isLayerSpec(spec)) {\n    return extractTransformsLayered(spec, config);\n  }\n  if (isUnitSpec(spec)) {\n    return extractTransformsUnit(spec, config);\n  }\n  if (isVConcatSpec(spec)) {\n    return extractTransformsVConcat(spec, config);\n  }\n  if (isHConcatSpec(spec)) {\n    return extractTransformsHConcat(spec, config);\n  }\n  throw new Error(log.message.INVALID_SPEC);\n}\n\nfunction extractTransformsUnit(spec: NormalizedUnitSpec, config: Config): NormalizedUnitSpec {\n  if (spec.encoding) {\n    const {encoding: oldEncoding, transform: oldTransforms, ...rest} = spec;\n    const {bins, timeUnits, aggregate, groupby, encoding: newEncoding} = extractTransformsFromEncoding(\n      oldEncoding,\n      config\n    );\n    return {\n      transform: [\n        ...(oldTransforms ? oldTransforms : []),\n        ...bins,\n        ...timeUnits,\n        ...(!aggregate.length ? [] : [{aggregate, groupby}])\n      ],\n      ...rest,\n      encoding: newEncoding\n    };\n  } else {\n    return spec;\n  }\n}\n\nfunction extractTransformsSingle(\n  spec: NormalizedFacetSpec | NormalizedRepeatSpec,\n  config: Config\n): NormalizedFacetSpec | NormalizedRepeatSpec {\n  const {spec: subspec, ...rest} = spec;\n  return {\n    ...rest,\n    spec: extractTransforms(subspec, config) as any\n  };\n}\n\nfunction extractTransformsLayered(spec: NormalizedLayerSpec, config: Config): NormalizedLayerSpec {\n  const {layer, ...rest} = spec;\n  return {\n    ...rest,\n    layer: layer.map(subspec => {\n      return extractTransforms(subspec, config) as any;\n    })\n  };\n}\n\nfunction extractTransformsVConcat(\n  spec: GenericVConcatSpec<NormalizedUnitSpec, NormalizedLayerSpec>,\n  config: Config\n): NormalizedConcatSpec {\n  const {vconcat, ...rest} = spec;\n  return {\n    ...rest,\n    vconcat: vconcat.map(subspec => {\n      return extractTransforms(subspec, config) as any;\n    })\n  };\n}\n\nfunction extractTransformsHConcat(\n  spec: GenericHConcatSpec<NormalizedUnitSpec, NormalizedLayerSpec>,\n  config: Config\n): NormalizedConcatSpec {\n  const {hconcat, ...rest} = spec;\n  return {\n    ...rest,\n    hconcat: hconcat.map(subspec => {\n      return extractTransforms(subspec, config) as any;\n    })\n  };\n}\n"]}