{"version":3,"file":"interval.js","sourceRoot":"","sources":["../../../../src/compile/selection/interval.ts"],"names":[],"mappings":"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","sourcesContent":["import {stringValue} from 'vega-util';\nimport {X, Y} from '../../channel';\nimport {warn} from '../../log';\nimport {hasContinuousDomain, isBinScale} from '../../scale';\nimport {keys} from '../../util';\nimport {VgEventStream} from '../../vega.schema';\nimport {UnitModel} from '../unit';\nimport {\n  channelSignalName,\n  positionalProjections,\n  SelectionCompiler,\n  SelectionComponent,\n  STORE,\n  TUPLE,\n  unitName\n} from './selection';\nimport {TUPLE_FIELDS} from './transforms/project';\nimport scales from './transforms/scales';\n\nexport const BRUSH = '_brush';\nexport const SCALE_TRIGGER = '_scale_trigger';\n\nconst interval: SelectionCompiler = {\n  signals: (model, selCmpt) => {\n    const name = selCmpt.name;\n    const fieldsSg = name + TUPLE + TUPLE_FIELDS;\n    const hasScales = scales.has(selCmpt);\n    const signals: any[] = [];\n    const dataSignals: string[] = [];\n    const scaleTriggers: any[] = [];\n\n    if (selCmpt.translate && !hasScales) {\n      const filterExpr = `!event.item || event.item.mark.name !== ${stringValue(name + BRUSH)}`;\n      events(selCmpt, (_: any[], evt: VgEventStream) => {\n        const filters = evt.between[0].filter || (evt.between[0].filter = []);\n        if (filters.indexOf(filterExpr) < 0) {\n          filters.push(filterExpr);\n        }\n      });\n    }\n\n    for (const p of selCmpt.project) {\n      const channel = p.channel;\n      if (channel !== X && channel !== Y) {\n        warn('Interval selections only support x and y encoding channels.');\n        continue;\n      }\n\n      const cs = channelSignals(model, selCmpt, channel);\n      const dname = channelSignalName(selCmpt, channel, 'data');\n      const vname = channelSignalName(selCmpt, channel, 'visual');\n      const scaleStr = stringValue(model.scaleName(channel));\n      const scaleType = model.getScaleComponent(channel).get('type');\n      const toNum = hasContinuousDomain(scaleType) ? '+' : '';\n\n      signals.push(...cs);\n      dataSignals.push(dname);\n\n      scaleTriggers.push({\n        scaleName: model.scaleName(channel),\n        expr:\n          `(!isArray(${dname}) || ` +\n          `(${toNum}invert(${scaleStr}, ${vname})[0] === ${toNum}${dname}[0] && ` +\n          `${toNum}invert(${scaleStr}, ${vname})[1] === ${toNum}${dname}[1]))`\n      });\n    }\n\n    // Proxy scale reactions to ensure that an infinite loop doesn't occur\n    // when an interval selection filter touches the scale.\n    if (!hasScales) {\n      signals.push({\n        name: name + SCALE_TRIGGER,\n        update: scaleTriggers.map(t => t.expr).join(' && ') + ` ? ${name + SCALE_TRIGGER} : {}`\n      });\n    }\n\n    // Only add an interval to the store if it has valid data extents. Data extents\n    // are set to null if pixel extents are equal to account for intervals over\n    // ordinal/nominal domains which, when inverted, will still produce a valid datum.\n    return signals.concat({\n      name: name + TUPLE,\n      on: [\n        {\n          events: dataSignals.map(t => ({signal: t})),\n          update:\n            dataSignals.join(' && ') +\n            ` ? {unit: ${unitName(model)}, fields: ${fieldsSg}, ` +\n            `values: [${dataSignals.join(', ')}]} : null`\n        }\n      ]\n    });\n  },\n\n  modifyExpr: (model, selCmpt) => {\n    const tpl = selCmpt.name + TUPLE;\n    return tpl + ', ' + (selCmpt.resolve === 'global' ? 'true' : `{unit: ${unitName(model)}}`);\n  },\n\n  marks: (model, selCmpt, marks) => {\n    const name = selCmpt.name;\n    const {xi, yi} = positionalProjections(selCmpt);\n    const store = `data(${stringValue(selCmpt.name + STORE)})`;\n\n    // Do not add a brush if we're binding to scales.\n    if (scales.has(selCmpt)) {\n      return marks;\n    }\n\n    const update: any = {\n      x: xi !== null ? {signal: `${name}_x[0]`} : {value: 0},\n      y: yi !== null ? {signal: `${name}_y[0]`} : {value: 0},\n      x2: xi !== null ? {signal: `${name}_x[1]`} : {field: {group: 'width'}},\n      y2: yi !== null ? {signal: `${name}_y[1]`} : {field: {group: 'height'}}\n    };\n\n    // If the selection is resolved to global, only a single interval is in\n    // the store. Wrap brush mark's encodings with a production rule to test\n    // this based on the `unit` property. Hide the brush mark if it corresponds\n    // to a unit different from the one in the store.\n    if (selCmpt.resolve === 'global') {\n      for (const key of keys(update)) {\n        update[key] = [\n          {\n            test: `${store}.length && ${store}[0].unit === ${unitName(model)}`,\n            ...update[key]\n          },\n          {value: 0}\n        ];\n      }\n    }\n\n    // Two brush marks ensure that fill colors and other aesthetic choices do\n    // not interefere with the core marks, but that the brushed region can still\n    // be interacted with (e.g., dragging it around).\n    const {fill, fillOpacity, ...stroke} = selCmpt.mark;\n    const vgStroke = keys(stroke).reduce((def, k) => {\n      def[k] = [\n        {\n          test: [xi !== null && `${name}_x[0] !== ${name}_x[1]`, yi != null && `${name}_y[0] !== ${name}_y[1]`]\n            .filter(x => x)\n            .join(' && '),\n          value: stroke[k]\n        },\n        {value: null}\n      ];\n      return def;\n    }, {});\n\n    return [\n      {\n        name: name + BRUSH + '_bg',\n        type: 'rect',\n        clip: true,\n        encode: {\n          enter: {\n            fill: {value: fill},\n            fillOpacity: {value: fillOpacity}\n          },\n          update: update\n        }\n      } as any\n    ].concat(marks, {\n      name: name + BRUSH,\n      type: 'rect',\n      clip: true,\n      encode: {\n        enter: {\n          fill: {value: 'transparent'}\n        },\n        update: {...update, ...vgStroke}\n      }\n    });\n  }\n};\nexport default interval;\n\n/**\n * Returns the visual and data signals for an interval selection.\n */\nfunction channelSignals(model: UnitModel, selCmpt: SelectionComponent, channel: 'x' | 'y'): any {\n  const vname = channelSignalName(selCmpt, channel, 'visual');\n  const dname = channelSignalName(selCmpt, channel, 'data');\n  const hasScales = scales.has(selCmpt);\n  const scaleName = model.scaleName(channel);\n  const scaleStr = stringValue(scaleName);\n  const scale = model.getScaleComponent(channel);\n  const scaleType = scale ? scale.get('type') : undefined;\n  const size = model.getSizeSignalRef(channel === X ? 'width' : 'height').signal;\n  const coord = `${channel}(unit)`;\n\n  const on = events(selCmpt, (def: any[], evt: VgEventStream) => {\n    return def.concat(\n      {events: evt.between[0], update: `[${coord}, ${coord}]`}, // Brush Start\n      {events: evt, update: `[${vname}[0], clamp(${coord}, 0, ${size})]`} // Brush End\n    );\n  });\n\n  // React to pan/zooms of continuous scales. Non-continuous scales\n  // (bin-linear, band, point) cannot be pan/zoomed and any other changes\n  // to their domains (e.g., filtering) should clear the brushes.\n  on.push({\n    events: {signal: selCmpt.name + SCALE_TRIGGER},\n    update:\n      hasContinuousDomain(scaleType) && !isBinScale(scaleType)\n        ? `[scale(${scaleStr}, ${dname}[0]), scale(${scaleStr}, ${dname}[1])]`\n        : `[0, 0]`\n  });\n\n  return hasScales\n    ? [{name: dname, on: []}]\n    : [\n        {\n          name: vname,\n          value: [],\n          on: on\n        },\n        {\n          name: dname,\n          on: [{events: {signal: vname}, update: `${vname}[0] === ${vname}[1] ? null : invert(${scaleStr}, ${vname})`}]\n        }\n      ];\n}\n\nfunction events(selCmpt: SelectionComponent, cb: (...args: any[]) => void) {\n  return selCmpt.events.reduce((on: any[], evt: VgEventStream) => {\n    if (!evt.between) {\n      warn(`${evt} is not an ordered event stream for interval selections`);\n      return on;\n    }\n    return cb(on, evt);\n  }, []);\n}\n"]}