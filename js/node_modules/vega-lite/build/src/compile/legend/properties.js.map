{"version":3,"file":"properties.js","sourceRoot":"","sources":["../../../../src/compile/legend/properties.ts"],"names":[],"mappings":"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","sourcesContent":["import {LabelOverlap, LegendOrient, LegendType} from 'vega';\nimport {Channel, isColorChannel} from '../../channel';\nimport {TypedFieldDef, valueArray} from '../../fielddef';\nimport {Legend, LegendConfig} from '../../legend';\nimport {isContinuousToContinuous, ScaleType} from '../../scale';\nimport {TimeUnit} from '../../timeunit';\nimport {contains, getFirstDefined} from '../../util';\nimport {Model} from '../model';\n\nexport function values(legend: Legend, fieldDef: TypedFieldDef<string>) {\n  const vals = legend.values;\n\n  if (vals) {\n    return valueArray(fieldDef, vals);\n  }\n  return undefined;\n}\n\nexport function clipHeight(legendType: LegendType) {\n  if (legendType === 'gradient') {\n    return 20;\n  }\n  return undefined;\n}\n\nexport function type(params: {\n  legend: Legend;\n  channel: Channel;\n  timeUnit?: TimeUnit;\n  scaleType: ScaleType;\n  alwaysReturn: boolean;\n}): LegendType {\n  const {legend} = params;\n\n  return getFirstDefined(legend.type, defaultType(params));\n}\n\nexport function defaultType({\n  channel,\n  timeUnit,\n  scaleType,\n  alwaysReturn\n}: {\n  channel: Channel;\n  timeUnit?: TimeUnit;\n  scaleType: ScaleType;\n  alwaysReturn: boolean;\n}): LegendType {\n  // Following the logic in https://github.com/vega/vega-parser/blob/master/src/parsers/legend.js\n\n  if (isColorChannel(channel)) {\n    if (contains(['quarter', 'month', 'day'], timeUnit)) {\n      return 'symbol';\n    }\n\n    if (isContinuousToContinuous(scaleType)) {\n      return alwaysReturn ? 'gradient' : undefined;\n    }\n  }\n  return alwaysReturn ? 'symbol' : undefined;\n}\n\nexport function direction({\n  legend,\n  legendConfig,\n  timeUnit,\n  channel,\n  scaleType\n}: {\n  legend: Legend;\n  legendConfig: LegendConfig;\n  timeUnit?: TimeUnit;\n  channel: Channel;\n  scaleType: ScaleType;\n}) {\n  const orient = getFirstDefined(legend.orient, legendConfig.orient, 'right');\n\n  const legendType = type({legend, channel, timeUnit, scaleType, alwaysReturn: true});\n  return getFirstDefined(\n    legend.direction,\n    legendConfig[legendType ? 'gradientDirection' : 'symbolDirection'],\n    defaultDirection(orient, legendType)\n  );\n}\n\nfunction defaultDirection(orient: LegendOrient, legendType: LegendType) {\n  switch (orient) {\n    case 'top':\n    case 'bottom':\n      return 'horizontal';\n\n    case 'left':\n    case 'right':\n    case 'none':\n    case undefined: // undefined = \"right\" in Vega\n      return undefined; // vertical is Vega's default\n    default:\n      // top-left / ...\n      // For inner legend, uses compact layout like Tableau\n      return legendType === 'gradient' ? 'horizontal' : undefined;\n  }\n}\n\nexport function defaultGradientLength({\n  legend,\n  legendConfig,\n  model,\n  channel,\n  scaleType\n}: {\n  legend: Legend;\n  legendConfig: LegendConfig;\n  model: Model;\n  channel: Channel;\n  scaleType: ScaleType;\n}) {\n  const {\n    gradientHorizontalMaxLength,\n    gradientHorizontalMinLength,\n    gradientVerticalMaxLength,\n    gradientVerticalMinLength\n  } = legendConfig;\n\n  const dir = direction({legend, legendConfig, channel, scaleType});\n\n  if (dir === 'horizontal') {\n    const orient = getFirstDefined(legend.orient, legendConfig.orient);\n    if (orient === 'top' || orient === 'bottom') {\n      return gradientLengthSignal(model, 'width', gradientHorizontalMinLength, gradientHorizontalMaxLength);\n    } else {\n      return gradientHorizontalMinLength;\n    }\n  } else {\n    // vertical / undefined (Vega uses vertical by default)\n    return gradientLengthSignal(model, 'height', gradientVerticalMinLength, gradientVerticalMaxLength);\n  }\n}\n\nfunction gradientLengthSignal(model: Model, sizeType: 'width' | 'height', min: number, max: number) {\n  const sizeSignal = model.getSizeSignalRef(sizeType).signal;\n  return {signal: `clamp(${sizeSignal}, ${min}, ${max})`};\n}\n\nexport function defaultLabelOverlap(scaleType: ScaleType): LabelOverlap {\n  if (contains(['quantile', 'threshold', 'log'], scaleType)) {\n    return 'greedy';\n  }\n  return undefined;\n}\n"]}