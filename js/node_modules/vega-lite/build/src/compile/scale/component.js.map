{"version":3,"file":"component.js","sourceRoot":"","sources":["../../../../src/compile/scale/component.ts"],"names":[],"mappings":"AAKA,OAAO,EAAW,KAAK,EAAC,MAAM,UAAU,CAAC;AAYzC,MAAM,OAAO,cAAe,SAAQ,KAA0B;IAK5D,YAAY,IAAY,EAAE,gBAAqC;QAC7D,KAAK,CACH,EAAE,EAAE,+BAA+B;QACnC,EAAC,IAAI,EAAC,CAAC,oCAAoC;SAC5C,CAAC;QARG,WAAM,GAAG,KAAK,CAAC;QAEf,YAAO,GAAuB,EAAE,CAAC;QAOtC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;IACjD,CAAC;CACF","sourcesContent":["import {ScaleChannel} from '../../channel';\nimport {Scale, ScaleType} from '../../scale';\nimport {Omit} from '../../util';\nimport {VgNonUnionDomain, VgRange, VgScale} from '../../vega.schema';\nimport {SignalRefComponent} from '../signal';\nimport {Explicit, Split} from '../split';\n\n/**\n * All VgDomain property except domain.\n * (We exclude domain as we have a special \"domains\" array that allow us merge them all at once in assemble.)\n */\n// TODO: also exclude domainRaw and property implement the right scaleComponent for selection domain\n\nexport type ScaleComponentProps = Omit<VgScale, 'domain' | 'range'> & {\n  range: VgRange<SignalRefComponent>;\n};\n\nexport class ScaleComponent extends Split<ScaleComponentProps> {\n  public merged = false;\n\n  public domains: VgNonUnionDomain[] = [];\n\n  constructor(name: string, typeWithExplicit: Explicit<ScaleType>) {\n    super(\n      {}, // no initial explicit property\n      {name} // name as initial implicit property\n    );\n    this.setWithExplicit('type', typeWithExplicit);\n  }\n}\n\n// Using Mapped Type to declare type (https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types)\nexport type ScaleComponentIndex = {[P in ScaleChannel]?: ScaleComponent};\n\nexport type ScaleIndex = {[P in ScaleChannel]?: Scale};\n"]}