{"version":3,"file":"lookup.js","sourceRoot":"","sources":["../../../../src/compile/data/lookup.ts"],"names":[],"mappings":"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","sourcesContent":["import {isString} from 'vega-util';\nimport * as log from '../../log';\nimport {LookupTransform} from '../../transform';\nimport {duplicate, hash} from '../../util';\nimport {VgLookupTransform} from '../../vega.schema';\nimport {Model} from '../model';\nimport {DataFlowNode, OutputNode} from './dataflow';\nimport {findSource} from './parse';\nimport {SourceNode} from './source';\n\nexport class LookupNode extends DataFlowNode {\n  public clone() {\n    return new LookupNode(null, duplicate(this.transform), this.secondary);\n  }\n\n  constructor(parent: DataFlowNode, public readonly transform: LookupTransform, public readonly secondary: string) {\n    super(parent);\n  }\n\n  public static make(parent: DataFlowNode, model: Model, transform: LookupTransform, counter: number) {\n    const sources = model.component.data.sources;\n\n    let fromSource = findSource(transform.from.data, sources);\n\n    if (!fromSource) {\n      fromSource = new SourceNode(transform.from.data);\n      sources.push(fromSource);\n    }\n\n    const fromOutputName = model.getName(`lookup_${counter}`);\n    const fromOutputNode = new OutputNode(\n      fromSource,\n      fromOutputName,\n      'lookup',\n      model.component.data.outputNodeRefCounts\n    );\n\n    model.component.data.outputNodes[fromOutputName] = fromOutputNode;\n\n    return new LookupNode(parent, transform, fromOutputNode.getSource());\n  }\n\n  public producedFields() {\n    return new Set(\n      this.transform.from.fields || (this.transform.as instanceof Array ? this.transform.as : [this.transform.as])\n    );\n  }\n\n  public hash() {\n    return `Lookup ${hash({transform: this.transform, secondary: this.secondary})}`;\n  }\n\n  public assemble(): VgLookupTransform {\n    let foreign: Partial<VgLookupTransform>;\n\n    if (this.transform.from.fields) {\n      // lookup a few fields and add create a flat output\n      foreign = {\n        values: this.transform.from.fields,\n        ...(this.transform.as ? {as: this.transform.as instanceof Array ? this.transform.as : [this.transform.as]} : {})\n      };\n    } else {\n      // lookup full record and nest it\n      let asName = this.transform.as;\n      if (!isString(asName)) {\n        log.warn(log.message.NO_FIELDS_NEEDS_AS);\n        asName = '_lookup';\n      }\n\n      foreign = {\n        as: [asName]\n      };\n    }\n\n    return {\n      type: 'lookup',\n      from: this.secondary,\n      key: this.transform.from.key,\n      fields: [this.transform.lookup],\n      ...foreign,\n      ...(this.transform.default ? {default: this.transform.default} : {})\n    };\n  }\n}\n"]}