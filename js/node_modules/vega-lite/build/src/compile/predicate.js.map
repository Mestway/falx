{"version":3,"file":"predicate.js","sourceRoot":"","sources":["../../../src/compile/predicate.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,WAAW,CAAC;AAEnC,OAAO,EAAC,qBAAqB,EAAE,oBAAoB,EAAY,MAAM,cAAc,CAAC;AACpF,OAAO,EAAC,WAAW,EAAC,MAAM,SAAS,CAAC;AAGpC,OAAO,EAAC,kBAAkB,EAAC,MAAM,uBAAuB,CAAC;AAEzD;;GAEG;AACH,4CAA4C;AAC5C,MAAM,UAAU,UAAU,CAAC,KAAY,EAAE,QAAmC,EAAE,IAAmB;IAC/F,OAAO,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAoB,EAAE,EAAE;QACpD,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE;YACvB,OAAO,SAAS,CAAC;SAClB;aAAM,IAAI,oBAAoB,CAAC,SAAS,CAAC,EAAE;YAC1C,OAAO,kBAAkB,CAAC,KAAK,EAAE,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SAC7D;aAAM;YACL,gBAAgB;YAChB,OAAO,qBAAqB,CAAC,SAAS,CAAC,CAAC;SACzC;IACH,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import {isString} from 'vega-util';\nimport {LogicalOperand} from '../logical';\nimport {fieldFilterExpression, isSelectionPredicate, Predicate} from '../predicate';\nimport {logicalExpr} from '../util';\nimport {DataFlowNode} from './data/dataflow';\nimport {Model} from './model';\nimport {selectionPredicate} from './selection/selection';\n\n/**\n * Converts a predicate into an expression.\n */\n// model is only used for selection filters.\nexport function expression(model: Model, filterOp: LogicalOperand<Predicate>, node?: DataFlowNode): string {\n  return logicalExpr(filterOp, (predicate: Predicate) => {\n    if (isString(predicate)) {\n      return predicate;\n    } else if (isSelectionPredicate(predicate)) {\n      return selectionPredicate(model, predicate.selection, node);\n    } else {\n      // Filter Object\n      return fieldFilterExpression(predicate);\n    }\n  });\n}\n"]}