{"version":3,"file":"mixins.js","sourceRoot":"","sources":["../../../../src/compile/mark/mixins.ts"],"names":[],"mappings":"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","sourcesContent":["import {array, isArray, isObject, isString} from 'vega-util';\nimport {isBinned, isBinning} from '../../bin';\nimport {Channel, NonPositionScaleChannel, SCALE_CHANNELS, ScaleChannel, X, X2, Y2} from '../../channel';\nimport {\n  ChannelDef,\n  getTypedFieldDef,\n  isConditionalSelection,\n  isFieldDef,\n  isValueDef,\n  SecondaryFieldDef,\n  TypedFieldDef,\n  ValueDef\n} from '../../fielddef';\nimport * as log from '../../log';\nimport {isPathMark, MarkDef} from '../../mark';\nimport {hasContinuousDomain} from '../../scale';\nimport {contains, Dict, getFirstDefined, keys} from '../../util';\nimport {VG_MARK_CONFIGS, VgEncodeEntry, VgValueRef} from '../../vega.schema';\nimport {getMarkConfig} from '../common';\nimport {expression} from '../predicate';\nimport {selectionPredicate} from '../selection/selection';\nimport {UnitModel} from '../unit';\nimport * as ref from './valueref';\n\nfunction isVisible(c: string) {\n  return c !== 'transparent' && c !== null && c !== undefined;\n}\n\nexport function color(model: UnitModel): VgEncodeEntry {\n  const {markDef, encoding, config} = model;\n  const {filled, type: markType} = markDef;\n\n  const configValue = {\n    fill: getMarkConfig('fill', markDef, config),\n    stroke: getMarkConfig('stroke', markDef, config),\n    color: getMarkConfig('color', markDef, config)\n  };\n\n  const transparentIfNeeded = contains(['bar', 'point', 'circle', 'square', 'geoshape'], markType)\n    ? 'transparent'\n    : undefined;\n\n  const defaultFill = getFirstDefined(\n    markDef.fill,\n    configValue.fill,\n    // If there is no fill, always fill symbols, bar, geoshape\n    // with transparent fills https://github.com/vega/vega-lite/issues/1316\n    transparentIfNeeded\n  );\n\n  const defaultStroke = getFirstDefined(markDef.stroke, configValue.stroke);\n\n  const colorVgChannel = filled ? 'fill' : 'stroke';\n\n  const fillStrokeMarkDefAndConfig: VgEncodeEntry = {\n    ...(defaultFill ? {fill: {value: defaultFill}} : {}),\n    ...(defaultStroke ? {stroke: {value: defaultStroke}} : {})\n  };\n\n  if (encoding.fill || encoding.stroke) {\n    // ignore encoding.color, markDef.color, config.color\n    if (markDef.color) {\n      // warn for markDef.color  (no need to warn encoding.color as it will be dropped in normalized already)\n      log.warn(log.message.droppingColor('property', {fill: 'fill' in encoding, stroke: 'stroke' in encoding}));\n    }\n\n    return {\n      ...nonPosition('fill', model, {defaultValue: getFirstDefined(defaultFill, transparentIfNeeded)}),\n      ...nonPosition('stroke', model, {defaultValue: defaultStroke})\n    };\n  } else if (encoding.color) {\n    return {\n      ...fillStrokeMarkDefAndConfig,\n      // override them with encoded color field\n      ...nonPosition('color', model, {\n        vgChannel: colorVgChannel,\n        // apply default fill/stroke first, then color config, then transparent if needed.\n        defaultValue: getFirstDefined(\n          markDef[colorVgChannel],\n          markDef.color,\n          configValue[colorVgChannel],\n          configValue.color,\n          filled ? transparentIfNeeded : undefined\n        )\n      })\n    };\n  } else if (isVisible(markDef.fill) || isVisible(markDef.stroke)) {\n    // Ignore markDef.color\n    if (markDef.color) {\n      log.warn(log.message.droppingColor('property', {fill: 'fill' in markDef, stroke: 'stroke' in markDef}));\n    }\n    return fillStrokeMarkDefAndConfig;\n  } else if (markDef.color) {\n    return {\n      ...fillStrokeMarkDefAndConfig, // in this case, fillStrokeMarkDefAndConfig only include config\n\n      // override config with markDef.color\n      [colorVgChannel]: {value: markDef.color}\n    };\n  } else if (isVisible(configValue.fill) || isVisible(configValue.stroke)) {\n    // ignore config.color\n    return fillStrokeMarkDefAndConfig;\n  } else if (configValue.color) {\n    return {\n      ...(transparentIfNeeded ? {fill: {value: 'transparent'}} : {}),\n      [colorVgChannel]: {value: configValue.color}\n    };\n  }\n  return {};\n}\n\nexport type Ignore = Record<'size' | 'orient', 'ignore' | 'include'>;\n\nexport function baseEncodeEntry(model: UnitModel, ignore: Ignore) {\n  const {fill, stroke} = color(model);\n  return {\n    ...markDefProperties(model.markDef, ignore),\n    ...wrapInvalid(model, 'fill', fill),\n    ...wrapInvalid(model, 'stroke', stroke),\n    ...nonPosition('opacity', model),\n    ...nonPosition('fillOpacity', model),\n    ...nonPosition('strokeOpacity', model),\n    ...nonPosition('strokeWidth', model),\n    ...tooltip(model),\n    ...text(model, 'href')\n  };\n}\n\nfunction wrapInvalid(model: UnitModel, channel: Channel, valueRef: VgValueRef | VgValueRef[]): VgEncodeEntry {\n  const {config, mark} = model;\n\n  if (config.invalidValues && valueRef && !isPathMark(mark)) {\n    // For non-path marks, we have to exclude invalid values (null and NaN) for scales with continuous domains.\n    // For path marks, we will use \"defined\" property and skip these values instead.\n    const test = validPredicate(model, {invalid: true, channels: SCALE_CHANNELS});\n    if (test) {\n      return {\n        [channel]: [\n          // prepend the invalid case\n          // TODO: support custom value\n          {test, value: null},\n          ...array(valueRef)\n        ]\n      };\n    }\n  }\n  return valueRef ? {[channel]: valueRef} : {};\n}\n\nfunction markDefProperties(mark: MarkDef, ignore: Ignore) {\n  return VG_MARK_CONFIGS.reduce((m, prop) => {\n    if (mark[prop] !== undefined && ignore[prop] !== 'ignore') {\n      m[prop] = {value: mark[prop]};\n    }\n    return m;\n  }, {});\n}\n\nexport function valueIfDefined(prop: string, value: string | number | boolean): VgEncodeEntry {\n  if (value !== undefined) {\n    return {[prop]: {value: value}};\n  }\n  return undefined;\n}\n\nfunction validPredicate(model: UnitModel, {invalid = false, channels}: {invalid?: boolean; channels: ScaleChannel[]}) {\n  const filterIndex = channels.reduce((aggregator: Dict<true>, channel) => {\n    const scaleComponent = model.getScaleComponent(channel);\n    if (scaleComponent) {\n      const scaleType = scaleComponent.get('type');\n      const field = model.vgField(channel, {expr: 'datum'});\n\n      // While discrete domain scales can handle invalid values, continuous scales can't.\n      if (field && hasContinuousDomain(scaleType)) {\n        aggregator[field] = true;\n      }\n    }\n    return aggregator;\n  }, {});\n\n  const fields = keys(filterIndex);\n  if (fields.length > 0) {\n    const op = invalid ? '||' : '&&';\n    return fields\n      .map(field => {\n        const eq = invalid ? '===' : '!==';\n        return `${field} ${eq} null ${op} ${invalid ? '' : '!'}isNaN(${field})`;\n      })\n      .join(` ${op} `);\n  }\n  return undefined;\n}\nexport function defined(model: UnitModel): VgEncodeEntry {\n  if (model.config.invalidValues === 'filter') {\n    const signal = validPredicate(model, {channels: ['x', 'y']});\n\n    if (signal) {\n      return {defined: {signal}};\n    }\n  }\n  return {};\n}\n\n/**\n * Return mixins for non-positional channels with scales.  (Text doesn't have scale.)\n */\nexport function nonPosition(\n  channel: NonPositionScaleChannel,\n  model: UnitModel,\n  opt: {defaultValue?: number | string | boolean; vgChannel?: string; defaultRef?: VgValueRef} = {}\n): VgEncodeEntry {\n  const {markDef, encoding} = model;\n  const {vgChannel = channel} = opt;\n\n  const {defaultValue = markDef[vgChannel]} = opt;\n  const defaultRef = opt.defaultRef || (defaultValue !== undefined ? {value: defaultValue} : undefined);\n\n  const channelDef = encoding[channel];\n\n  return wrapCondition(model, channelDef, vgChannel, cDef => {\n    return ref.midPoint(\n      channel,\n      cDef,\n      undefined,\n      model.scaleName(channel),\n      model.getScaleComponent(channel),\n      null, // No need to provide stack for non-position as it does not affect mid point\n      defaultRef\n    );\n  });\n}\n\n/**\n * Return a mixin that include a Vega production rule for a Vega-Lite conditional channel definition.\n * or a simple mixin if channel def has no condition.\n */\nexport function wrapCondition(\n  model: UnitModel,\n  channelDef: ChannelDef,\n  vgChannel: string,\n  refFn: (cDef: ChannelDef) => VgValueRef\n): VgEncodeEntry {\n  const condition = channelDef && channelDef.condition;\n  const valueRef = refFn(channelDef);\n  if (condition) {\n    const conditions = isArray(condition) ? condition : [condition];\n    const vgConditions = conditions.map(c => {\n      const conditionValueRef = refFn(c);\n      const test = isConditionalSelection(c) ? selectionPredicate(model, c.selection) : expression(model, c.test);\n      return {\n        test,\n        ...conditionValueRef\n      };\n    });\n    return {\n      [vgChannel]: [...vgConditions, ...(valueRef !== undefined ? [valueRef] : [])]\n    };\n  } else {\n    return valueRef !== undefined ? {[vgChannel]: valueRef} : {};\n  }\n}\n\nexport function tooltip(model: UnitModel) {\n  const {encoding, markDef, config} = model;\n  const channelDef = encoding.tooltip;\n  if (isArray(channelDef)) {\n    return {tooltip: ref.tooltipForEncoding({tooltip: channelDef}, config)};\n  } else {\n    return wrapCondition(model, channelDef, 'tooltip', cDef => {\n      // use valueRef based on channelDef first\n      const tooltipRefFromChannelDef = ref.text(cDef, model.config);\n      if (tooltipRefFromChannelDef) {\n        return tooltipRefFromChannelDef;\n      }\n\n      if (cDef === null) {\n        // Allow using encoding.tooltip = null to disable tooltip\n        return undefined;\n      }\n\n      // If tooltipDef does not exist, then use value from markDef or config\n      const markTooltip = getFirstDefined(markDef.tooltip, getMarkConfig('tooltip', markDef, config));\n      if (isString(markTooltip)) {\n        return {value: markTooltip};\n      } else if (isObject(markTooltip)) {\n        // `tooltip` is `{fields: 'encodings' | 'fields'}`\n        if (markTooltip.content === 'encoding') {\n          return ref.tooltipForEncoding(encoding, config);\n        } else {\n          return {signal: 'datum'};\n        }\n      }\n\n      return undefined;\n    });\n  }\n}\n\nexport function text(model: UnitModel, channel: 'text' | 'href' = 'text') {\n  const channelDef = model.encoding[channel];\n  return wrapCondition(model, channelDef, channel, cDef => ref.text(cDef, model.config));\n}\n\nexport function bandPosition(fieldDef: TypedFieldDef<string>, channel: 'x' | 'y', model: UnitModel) {\n  const scaleName = model.scaleName(channel);\n  const sizeChannel = channel === 'x' ? 'width' : 'height';\n\n  if (model.encoding.size || model.markDef.size !== undefined) {\n    const orient = model.markDef.orient;\n    if (orient) {\n      const centeredBandPositionMixins = {\n        // Use xc/yc and place the mark at the middle of the band\n        // This way we never have to deal with size's condition for x/y position.\n        [channel + 'c']: ref.fieldRef(fieldDef, scaleName, {}, {band: 0.5})\n      };\n\n      if (getTypedFieldDef(model.encoding.size)) {\n        return {\n          ...centeredBandPositionMixins,\n          ...nonPosition('size', model, {vgChannel: sizeChannel})\n        };\n      } else if (isValueDef(model.encoding.size)) {\n        return {\n          ...centeredBandPositionMixins,\n          ...nonPosition('size', model, {vgChannel: sizeChannel})\n        };\n      } else if (model.markDef.size !== undefined) {\n        return {\n          ...centeredBandPositionMixins,\n          [sizeChannel]: {value: model.markDef.size}\n        };\n      }\n    } else {\n      log.warn(log.message.cannotApplySizeToNonOrientedMark(model.markDef.type));\n    }\n  }\n  return {\n    [channel]: ref.fieldRef(fieldDef, scaleName, {binSuffix: 'range'}),\n    [sizeChannel]: ref.bandRef(scaleName)\n  };\n}\n\nexport function centeredBandPosition(\n  channel: 'x' | 'y',\n  model: UnitModel,\n  defaultPosRef: VgValueRef,\n  defaultSizeRef: VgValueRef\n) {\n  const centerChannel: 'xc' | 'yc' = channel === 'x' ? 'xc' : 'yc';\n  const sizeChannel = channel === 'x' ? 'width' : 'height';\n  return {\n    ...pointPosition(channel, model, defaultPosRef, centerChannel),\n    ...nonPosition('size', model, {defaultRef: defaultSizeRef, vgChannel: sizeChannel})\n  };\n}\n\nexport function binPosition(\n  fieldDef: TypedFieldDef<string>,\n  fieldDef2: ValueDef | SecondaryFieldDef<string>,\n  channel: 'x' | 'y',\n  scaleName: string,\n  spacing: number,\n  reverse: boolean\n) {\n  const binSpacing = {\n    x: reverse ? spacing : 0,\n    x2: reverse ? 0 : spacing,\n    y: reverse ? 0 : spacing,\n    y2: reverse ? spacing : 0\n  };\n  const channel2 = channel === X ? X2 : Y2;\n  if (isBinning(fieldDef.bin)) {\n    return {\n      [channel2]: ref.bin(fieldDef, scaleName, 'start', binSpacing[`${channel}2`]),\n      [channel]: ref.bin(fieldDef, scaleName, 'end', binSpacing[channel])\n    };\n  } else if (isBinned(fieldDef.bin) && isFieldDef(fieldDef2)) {\n    return {\n      [channel2]: ref.fieldRef(fieldDef, scaleName, {}, {offset: binSpacing[`${channel}2`]}),\n      [channel]: ref.fieldRef(fieldDef2, scaleName, {}, {offset: binSpacing[channel]})\n    };\n  } else {\n    log.warn(log.message.channelRequiredForBinned(channel2));\n    return undefined;\n  }\n}\n\n/**\n * Return mixins for point (non-band) position channels.\n */\nexport function pointPosition(\n  channel: 'x' | 'y',\n  model: UnitModel,\n  defaultRef: VgValueRef | 'zeroOrMin' | 'zeroOrMax',\n  vgChannel?: 'x' | 'y' | 'xc' | 'yc'\n) {\n  // TODO: refactor how refer to scale as discussed in https://github.com/vega/vega-lite/pull/1613\n\n  const {encoding, mark, stack} = model;\n\n  const channelDef = encoding[channel];\n  const channel2Def = encoding[channel === X ? X2 : Y2];\n  const scaleName = model.scaleName(channel);\n  const scale = model.getScaleComponent(channel);\n\n  const offset = ref.getOffset(channel, model.markDef);\n\n  const valueRef =\n    !channelDef && (encoding.latitude || encoding.longitude)\n      ? // use geopoint output if there are lat/long and there is no point position overriding lat/long.\n        {field: model.getName(channel)}\n      : {\n          ...ref.position(\n            channel,\n            channelDef,\n            channel2Def,\n            scaleName,\n            scale,\n            stack,\n            ref.getDefaultRef(defaultRef, channel, scaleName, scale, mark)\n          ),\n          ...(offset ? {offset} : {})\n        };\n\n  return {\n    [vgChannel || channel]: valueRef\n  };\n}\n\n/**\n * Return mixins for x2, y2.\n * If channel is not specified, return one channel based on orientation.\n */\nexport function pointPosition2(model: UnitModel, defaultRef: 'zeroOrMin' | 'zeroOrMax', channel: 'x2' | 'y2') {\n  const {encoding, mark, stack} = model;\n\n  const baseChannel = channel === 'x2' ? 'x' : 'y';\n  const channelDef = encoding[baseChannel];\n  const scaleName = model.scaleName(baseChannel);\n  const scale = model.getScaleComponent(baseChannel);\n\n  const offset = ref.getOffset(channel, model.markDef);\n\n  const valueRef =\n    !channelDef && (encoding.latitude || encoding.longitude)\n      ? // use geopoint output if there are lat2/long2 and there is no point position2 overriding lat2/long2.\n        {field: model.getName(channel)}\n      : {\n          ...ref.position2(\n            channel,\n            channelDef,\n            encoding[channel],\n            scaleName,\n            scale,\n            stack,\n            ref.getDefaultRef(defaultRef, baseChannel, scaleName, scale, mark)\n          ),\n          ...(offset ? {offset} : {})\n        };\n\n  return {[channel]: valueRef};\n}\n"]}