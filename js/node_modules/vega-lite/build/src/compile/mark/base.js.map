{"version":3,"file":"base.js","sourceRoot":"","sources":["../../../../src/compile/mark/base.ts"],"names":[],"mappings":"","sourcesContent":["import {VgEncodeEntry, VgPostEncodingTransform} from '../../vega.schema';\nimport {UnitModel} from '../unit';\n\n/**\n * Abstract interface for compiling a Vega-Lite primitive mark type.\n */\nexport interface MarkCompiler {\n  /**\n   * Underlying vega Mark type for the Vega-Lite mark.\n   */\n  vgMark: 'area' | 'line' | 'symbol' | 'rect' | 'rule' | 'text' | 'trail' | 'shape';\n\n  encodeEntry: (model: UnitModel) => VgEncodeEntry;\n\n  /**\n   * Transform on a mark after render, used for layout and projections\n   */\n  postEncodingTransform?: (model: UnitModel) => VgPostEncodingTransform[];\n}\n"]}