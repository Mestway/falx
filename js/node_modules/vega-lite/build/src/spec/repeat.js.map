{"version":3,"file":"repeat.js","sourceRoot":"","sources":["../../../src/spec/repeat.ts"],"names":[],"mappings":"AA4CA,MAAM,UAAU,YAAY,CAAC,IAAc;IACzC,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC;AACtC,CAAC","sourcesContent":["import {Resolve} from '../resolve';\nimport {BaseSpec} from './base';\nimport {GenericSpec} from './index';\nimport {GenericLayerSpec, NormalizedLayerSpec} from './layer';\nimport {Repeat} from './repeat';\nimport {GenericCompositionLayout} from './toplevel';\nimport {GenericUnitSpec, NormalizedUnitSpec} from './unit';\n\nexport interface Repeat {\n  /**\n   * Vertical repeated views.\n   */\n  row?: string[];\n\n  /**\n   * Horizontal repeated views.\n   */\n  column?: string[];\n}\n\n/**\n * Base interface for a repeat specification.\n */\nexport interface GenericRepeatSpec<U extends GenericUnitSpec<any, any>, L extends GenericLayerSpec<any>>\n  extends BaseSpec,\n    GenericCompositionLayout {\n  /**\n   * An object that describes what fields should be repeated into views that are laid out as a `row` or `column`.\n   */\n  repeat: Repeat;\n\n  spec: GenericSpec<U, L>;\n\n  /**\n   * Scale and legend resolutions for repeated charts.\n   */\n  resolve?: Resolve;\n}\n\n/**\n * A repeat specification without any shortcut/expansion syntax.\n */\nexport type NormalizedRepeatSpec = GenericRepeatSpec<NormalizedUnitSpec, NormalizedLayerSpec>;\n\nexport function isRepeatSpec(spec: BaseSpec): spec is GenericRepeatSpec<any, any> {\n  return spec['repeat'] !== undefined;\n}\n"]}