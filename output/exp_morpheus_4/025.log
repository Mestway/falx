/Users/yufeng/research/vis-pirate/venv/lib/python3.7/site-packages/rpy2/robjects/pandas2ri.py:191: FutureWarning: from_items is deprecated. Please use DataFrame.from_dict(dict(items), ...) instead. DataFrame.from_dict(OrderedDict(items)) may be used to preserve the key order.
  res = PandasDataFrame.from_items(items)
[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] # candidates before getting the correct solution: 0
[info] Solution found: gather(@param0, ['1'])
[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] # candidates before getting the correct solution: 0
[info] Solution found: cumsum(@param0, 2)
====> run synthesize 025.json
# num samples per layer: 4
      Complaint Type  Count
0          Too noisy   27.0
1         Overpriced  789.0
2  Food is tasteless   65.0
3     Food not fresh    9.0
4  Food is too salty   15.0
5          Not clean   30.0
6   Unfriendly staff   12.0
7          Wait time  109.0
8      No atmosphere   45.0
9     Small portions  621.0
                 c_x    c_y
0  Food is too salty   15.0
1      No atmosphere   45.0
2         Overpriced  789.0
3          Wait time  109.0
# candidates before getting the correct solution: 0
      Complaint Type  Count
0          Too noisy   27.0
1         Overpriced  789.0
2  Food is tasteless   65.0
3     Food not fresh    9.0
4  Food is too salty   15.0
5          Not clean   30.0
6   Unfriendly staff   12.0
7          Wait time  109.0
8      No atmosphere   45.0
9     Small portions  621.0
                 c_x     c_y
0          Wait time  1056.0
1         Overpriced   816.0
2  Food is too salty   905.0
3     Small portions  1722.0
# candidates before getting the correct solution: 0
## synthesize result for task 025.json
# table_prog:
  [ApplyNode(gather, [ParamNode(0), AtomNode(['1'])]), ApplyNode(cumsum, [ParamNode(0), AtomNode(2)])]
# vis_spec:
    {'layer': [{'mark': {'type': 'bar', 'opacity': 0.7}, 'encoding': {'x': {'field': 'VALUE', 'type': 'nominal', 'sort': None}, 'y': {'field': 'Count', 'type': 'quantitative'}}, 'transform': [{'filter': 'datum.layer_id == 0'}]}, {'mark': {'type': 'line', 'opacity': 0.7}, 'encoding': {'x': {'field': 'Complaint Type', 'type': 'nominal'}, 'y': {'field': 'cumsum', 'type': 'quantitative'}, 'order': {'field': 'Complaint Type', 'type': 'quantitative'}}, 'transform': [{'filter': 'datum.layer_id == 1'}]}], 'resolve': {}}
# time used (s): 4.0304

real	0m6.073s
user	0m5.631s
sys	0m0.271s
